computer basics

1/0
text - human readable
	ascii code
binary - machine readable
images
	RGB code
video = motion picture
	FPS


32315678
decimal = 0-9

B23123
hex code= 0-9 , A-F


src - source code
bin - binary code



BankAccount =
	money , accountnumber, name, address, deposit , withdraw, accountType,
		atmPin, userid , password, checkBalance, openAccount, closeAccount
	Variable
	HAS-A : money, accountnumber,name, address, type, pin ,userid, password
	Method
	DOES-A : deposit, withdraw , checkBalance, openAccount, closeAccount
	
	
java program
	variable
	methods



Object oriented programming : modular approach
Procedure oriented programming : task oriented, machine level programming


Rocket :
	cockpit -
		oxygen supply
		waterNutrients
		controls
	fuelchamber -
		fuels
	combustionChamber
		burnfuel
		exhaust

	takeOffInSpace


Fan :
	Has-A : Blades, motor, switch, speed
	Does-A : turnOn,TurnOff,increaseSpeed,decreaseSpeed


Class BankAccount 
	has-a : name, accountNumber, balance,ssn
	
	
	REUSABILITY
Iphone
	call
	text
Iphone2 inherit Iphone
	camera
Iphone3 inherit Iphone2
	gpsMap
IphoneX
	applyPay
	facialRecog
	

Login
	facialRecog
	userid and password
	emailid and passsword
	phone and password
	secretPin
	fingerScan
	
	
	
	
********************** variables **************************
Programs
	has-a : attributes
	does-a : activity
Programs
	information
	process Information - instruction on how to process information
Machines/devices
	memory
	cpu - process instruction
	

Bank
	has-A = Balance=100
	
	does-A = 
		withdraw(50)
			Balance = 100 - 50;

		deposit(20)
			Balance = 100 + 20;
	

public class BankAccount 
{
	int Balance=100;
	public void withdraw(int withdrawAmount) {
		Balance = Balance - withdrawAmount;
	}

	public void deposit(int depositAmount){
		Balance = Balance + depositAmount;
	}
}	
	
Program = SYNTAX
	Variable = balance = 100
	Method
		withdraw(input)
			logic / algorithm
		
		deposit(input)
			logic / algorithm
	



Programs
	has-a : attributes
	does-a : activity




Bank
	has-A = balance, name, accountNumber,isActive,address
	*********** 
	What is the data-type of value you would store
		number	= byte, short, int, long
		fraction number = float, double
		1 character = char
		group of characters = String
		Yes/no answer = boolean
		complex = create another program <anotherprogram> (has-a exercise)
			anotherprogram attribute_name=new anotherprogram();
	*********** 
	balance = fraction number
	name = group of characters
	accountNumber = number
	isActive = Yes/No
	address = complex
		has -a : unit , streetNumber, city,state,zip, country
		create a new program
		
	data-type     name-attribute;
	float    balance; // 6 precision accuracy
	String   name;
	int    accountNumber;
	boolean    isActive;
	anotherprogram attribute_name=new anotherprogram();
	
	byte = 1 byte in memory	-128 to 127
	short = 2 bytes 			-32768 to 32767
	int = 4 bytes			-2billion to 2 billion
	long = 8 bytes			millions of trilliions
	
	int    accountNumber;
	byte    birthDate;
	byte  birthMonth;
	short  birthYear;
	int    zipCode; 
	long     phoneNumber;  
	
	
	
	equal sign = 
	asdadasd=asdasdasd
	LHS = RHS
	
	int a=12;
	
	
	
	
	*********** attribute names rules **************
	
	1) alphabets or numbers or $ _
	2) first character should always be alphabets or $ or _
	
	
	
	
	int 1sadasdad234$_;
	
	
	telecom
		has-a : phone_number
	
	
	
 *********** Declaration rules ***********
	Declration line includes.... Data type followed by variable name
	variable cannot be assigned with a value before declaration a data type
	variable names : same program and same block
		u cannot have 2 similar variable names
		can contain alphabets, numbers, $, _
		start with alphabet or $ or _ 
		coding practice
			naming convention - camelCase
			choose a relevant meaningful names
	
	
******** initialization rules ****
	Value assigned to a variable for the FIRST time.
	values should match the data type on LHS
	RHS can be literal value or variable of same type


Methods :
	********* Method Declaration	*********
		how to recognize methods : Does-A exercise
		how to code methods :
			What to name this activity ??? <<NAME>>
			how many inputs are required ??? what are the data type of each inputs ???
			how many outputs are required ??? what is the data type of each output ???
		
		PUBLIC 	OUTPUT 	NAME	(INPUT)
	
	
		NAME : similar rules as variables
			Follow camelCase format in method names
			Alphabets , numbers, $, _ allowed in method names
	
		OUTPUT : CAN ALWAYS BE 0 or 1 
			0 = void  ... 
				public  void hello(String message)
			1 = appropriate data type, int/boolean... 
				public int add(int a, int b)
			more than 1 = complex or multiple infor to return, create a class that contains all the output data
				public Profile display(String userid)
				
		INPUT : CAN ALWAYS BE 0 or MORE 
			0 = if no input require, leave it empty
				public int bye(  )
			1 = write the data type followed by variable name
				public void welcome(String greeting)
			More = if more than 1 input , separated by comma. data type followed by the name 
				public int add(int number1, int number2)

	
how to code methods :
	What to name this activity ??? addition
	how many inputs are required ??? what are the data type of each inputs ???
		2 inputs... int and int
	how many outputs are required ??? what is the data type of each output ???
		1 output.... int
 
PUBLIC 	OUTPUT 	NAME	(INPUT)
public	float		simpleInterest(int principal, float rateOfInterest, int term)

Write a software/method for area of rectangle 
public	float		areaOfRectange (float length,float width)

Calculate area of circle
public 	float		areaOfCircle(float radius)
	
Calculate shopping cart value
public 	float		shoppingCart(float price,byte quantity)

calculate area of square
public	float		areaOfSquare(float side)
	
design a software for login page
public	boolean	login(String userid, String password)
	
design google address search method
public 	Address	searchRestarAddress	(String restaurantName)	
public class Address{
	String street;
	String city;
	String state;
	int zip;
	
}
	********* Scope of Data ********* 
		Data that is part of you or defines you - global
		Data that is provided to you by other - parameter
		Data that u hold on temprory basis - local
		
		
	********* Accessing Data ********* 
		same program : direct access 
		outside program : accessed with reference to the program using dot operator




	
	
	
	