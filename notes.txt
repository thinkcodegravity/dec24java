Programming concepts

Procedure oriented programming
	focus on the task
Object oriented programming
	focus on the system
	
Problem statement : Rocket fly	
	
Procedure oriented programming : expert
	focus on FLY
	
Real world problem or beginner

Object oriented programming - modular approach
	focus on Rocket
	
	Rocket 
		Has -A : propeller, combustion chamber, Fuel, cockpit
		
		Does-A : fly
					take fuel
					burn fuel in combustion chamber
					exhaust gas from propeller compoent
					
	
	BankAccount : accountNumber,routingnumber, withdraw,userid, deposit, id,password, balance, login, 
			applyLoan, pincode
	
		Store/Hold information
		HAS-A : accountNumber,routingnumber, userid,id,password,balance,pincode=5678
			
			pincode , enterPin
			
		Manipulate/changing/processing information
		DOES-A : withdraw (Action), deposit, login, applyLoan
	
	
	Memory : store information
	CPU : process information
	
	
	BankAccount : 
		
		Store/Hold information
		HAS-A : balance=1000
			
		Manipulate/changing/processing information
		DOES-A : 
			withdraw (10000$)
				if balance is greater than withdraw amount
					then balance minus withdraw amount
				or else if balance is less than withdraw amount
					low balance. cannot withdraw
					
	public class BankAccount{
		int balance=1000;
		
		public  void withdraw(int withdrawAmount){
			if(balance >= withdrawAmount)
				balance=balance-withdrawAmount;
			else
				sysout("low balance. cannot withdraw);
		}
	}
	

GMAIL

Facebook

Amazon

Fan

TV

Car



Computer programmer
Object Oriented Programmer
Java programmer


Research 5 years to launch the first smart phone
Iphone3 2006
	call
	text
	browse
	
	
Iphone4 2007
	call - inherited (REUSABILITY)
	text - inherited
	browse - inherited
	appleMap - 1 year
	
	
Inheritance
Encapsulation
Abstraction
	hide internal complexity
	provide easy to use interface to your customers
	
	Iphone
		Inside : wireless tech, hardware tech,wire,circuit
		Outside : screen
	
	
Polymorphism


Language - Stickiness, tightly coupled


Analysis

BankAccount : accountNumber,routingnumber, withdraw,userid, deposit, id,password, balance, login, 
		applyLoan, pincode

	variable = vary various = changes
	Store/Hold information
	HAS-A : accountNumber,routingnumber, userid,id,password,balance,pincode=5678
	
	// variables hold information, that can change over the time.
	int balance=100; // balance is a varible.. variable
	
	method
	Manipulate/changing/processing information
	DOES-A : withdraw (Action), deposit, login, applyLoan


Create program BankAccount

guideline 

camel case
first letter is UPPERCASE
remaining letter are lower case

public class BankAccount{
	accountNumber;
	routingnumber;
}

amazon
	has-a : product,price,quantity, customers, buyer,seller
	
	does-a :
		shopping
		login
		payment
		checkOut
		cancelOrder
		
		
public class Amazon{
	
	int product;
	float price;
	int quantity;
	String customers;
	String buyer;
	String seller;
	
}


Programs
	Store information (HAS-A)
	
	Actions based on information(DOES-A)
	
	
BankAccount
	balance=100$ (BankAccount HAS-A balance)
	
	Deposit( 10$ )(BankAccount DOES Deposit)
		deduct balance by 10$
	
	
Digital Information :
	Alphabetic : single character, Group of character
		single character : IsActive , IsLoggedIn, IsOrderCompleted
		Group of character : name, city
	Numeric :
		whole : 18,21,55
		fractional : 5.10 , 140.23
	Yes/NO : true, false
	Complex : 
		contains sub information
		Address : 
			street, bldgNumber, city, state, zip
			
			
			
			
			
			
			
			Variable : store information

	Long term information : name, age, native
		race : asian	(Shared) Static or Class variable
		planet : earth	 
		name : john	(Specific)	instance variable
		fingerprint : qwewqeqwe   
		
	Short term information: 
		Input : 10 X 20 (Parametric variable)
			1000000$
		local : 5 + 3 + 7 + 4
			5 + 3= 8	(local variable)
			8 + 7= 15
			15 + 4 = 19

Class BankOfAmericaCustomer
	accountNumber=12345
	i want to withdraw - how much ? 10$
	bankName="bankOfAmerica";
	simpleinterest calculator
		int a=multiply P and T
		int b=multiply a and R
		int c=divide b by 100
		PTR/100
	


methods (actions)

who can access this functionality ? public 
Output of this functionality ?
Name of this functionlity ?
Input for this functionality ?
	
access_privilege   Output   name ( input) 
public		int		add(int a)
	Name : what do you want to call this functionality ?
		
	Input :
		0 input : leave blank ( )
		1 input : data type and name of variable input  ( int withdrawAmount)
		more than 1 input : multiple pair comma separate (data type and name of variable input)
					(int number1 , int number2)
	Output : 
		0 output : void
		1 output : mention the data type of that output 
		more than 1 output : create a complex program that can hold multiple output information
			write the name of this program 
	

write a program method to calculate area of square
Name : areaOfSquare
input : just 1... side... int..... (int side)
Output : int
public 	int 	areaOfSquare(int side)
	
write a program method to calculate area of rectangle
Name : areaOfRectangle
input : 2 input... length and breadth... int... (int length  , int breadth)
Output :  int
public 	int 	areaOfRectangle(int length  , int breadth)
	
write a program method to provide LOGIN on website
Name : userLogin
input : 2... userid and password... String... (String userid, String password)
Output :  boolean
public 	boolean	userLogin(String userid, String password)

Naming RULES	
1)Naming conventions
	Class : AmazonEcommerce	(camelcase starts from first word)
	Variable : amazonProduct (camelcase starts from second word)
	Method : sellAmazonProduct() (camelcase starts from second word and is followed by () )

System.out.print()

2)should start with alphabet or $ or _
3)can contain any alphabet or number or $ or _
	
amazon_Buy123

4) cannot use any reserved keywords (purple colored words in program)




void add(  int x, int y)   {

}


void sub(  )








